{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { UserService } from \"../../Backend/src/services/userService\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Login = function Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    dni = _useState2[0],\n    setDni = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    clave = _useState4[0],\n    setClave = _useState4[1];\n  var navigation = useNavigation();\n  var handleLogin = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield UserService.GetUserLogin({\n          usuario: dni,\n          clave: clave\n        });\n        if (response) {\n          navigation.navigate('HomeScreen');\n        } else {\n          alert('Credenciales incorrectas. Por favor, inténtelo de nuevo.');\n        }\n      } catch (error) {\n        console.error('Error al iniciar sesión:', error);\n      }\n    });\n    return function handleLogin() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"Login\"\n    }), _jsx(TextInput, {\n      placeholder: \"DNI\",\n      value: dni,\n      onChangeText: function onChangeText(text) {\n        return setDni(text);\n      }\n    }), _jsx(TextInput, {\n      placeholder: \"Contrase\\xF1a\",\n      secureTextEntry: true,\n      value: clave,\n      onChangeText: function onChangeText(text) {\n        return setClave(text);\n      }\n    }), _jsx(Button, {\n      title: \"Iniciar sesi\\xF3n\",\n      onPress: handleLogin\n    })]\n  });\n};\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","Button","useNavigation","UserService","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","dni","setDni","_useState3","_useState4","clave","setClave","navigation","handleLogin","_ref","_asyncToGenerator","response","GetUserLogin","usuario","navigate","alert","error","console","apply","arguments","children","placeholder","value","onChangeText","text","secureTextEntry","title","onPress"],"sources":["C:/Users/fran/Desktop/Nueva carpeta/DEMOPROYECTO/frontend/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, Button } from 'react-native';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { UserService } from '../../Backend/src/services/userService';\r\n\r\nconst Login = () => {\r\n  const [dni, setDni] = useState('');\r\n  const [clave, setClave] = useState('');\r\n  const navigation = useNavigation();\r\n\r\n  const handleLogin = async () => {\r\n    try {\r\n      const response = await UserService.GetUserLogin({ usuario: dni, clave });\r\n      if (response) {\r\n        // Inicio de sesión exitoso, navegar a HomeScreen\r\n        navigation.navigate('HomeScreen');\r\n      } else {\r\n        alert('Credenciales incorrectas. Por favor, inténtelo de nuevo.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Login</Text>\r\n      <TextInput\r\n        placeholder=\"DNI\"\r\n        value={dni}\r\n        onChangeText={(text) => setDni(text)}\r\n      />\r\n      <TextInput\r\n        placeholder=\"Contraseña\"\r\n        secureTextEntry\r\n        value={clave}\r\n        onChangeText={(text) => setClave(text)}\r\n      />\r\n      <Button title=\"Iniciar sesión\" onPress={handleLogin} />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,MAAA;AAExC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAASC,WAAW;AAAiD,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAErE,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAA,EAAS;EAClB,IAAAC,SAAA,GAAsBZ,QAAQ,CAAC,EAAE,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3BG,GAAG,GAAAF,UAAA;IAAEG,MAAM,GAAAH,UAAA;EAClB,IAAAI,UAAA,GAA0BjB,QAAQ,CAAC,EAAE,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAA/BE,KAAK,GAAAD,UAAA;IAAEE,QAAQ,GAAAF,UAAA;EACtB,IAAMG,UAAU,GAAGhB,aAAa,CAAC,CAAC;EAElC,IAAMiB,WAAW;IAAA,IAAAC,IAAA,GAAAC,iBAAA,CAAG,aAAY;MAC9B,IAAI;QACF,IAAMC,QAAQ,SAASnB,WAAW,CAACoB,YAAY,CAAC;UAAEC,OAAO,EAAEZ,GAAG;UAAEI,KAAK,EAALA;QAAM,CAAC,CAAC;QACxE,IAAIM,QAAQ,EAAE;UAEZJ,UAAU,CAACO,QAAQ,CAAC,YAAY,CAAC;QACnC,CAAC,MAAM;UACLC,KAAK,CAAC,0DAA0D,CAAC;QACnE;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;IAAA,gBAZKR,WAAWA,CAAA;MAAA,OAAAC,IAAA,CAAAS,KAAA,OAAAC,SAAA;IAAA;EAAA,GAYhB;EAED,OACEvB,KAAA,CAACT,IAAI;IAAAiC,QAAA,GACH1B,IAAA,CAACN,IAAI;MAAAgC,QAAA,EAAC;IAAK,CAAM,CAAC,EAClB1B,IAAA,CAACL,SAAS;MACRgC,WAAW,EAAC,KAAK;MACjBC,KAAK,EAAErB,GAAI;MACXsB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKtB,MAAM,CAACsB,IAAI,CAAC;MAAA;IAAC,CACtC,CAAC,EACF9B,IAAA,CAACL,SAAS;MACRgC,WAAW,EAAC,eAAY;MACxBI,eAAe;MACfH,KAAK,EAAEjB,KAAM;MACbkB,YAAY,EAAE,SAAAA,aAACC,IAAI;QAAA,OAAKlB,QAAQ,CAACkB,IAAI,CAAC;MAAA;IAAC,CACxC,CAAC,EACF9B,IAAA,CAACJ,MAAM;MAACoC,KAAK,EAAC,mBAAgB;MAACC,OAAO,EAAEnB;IAAY,CAAE,CAAC;EAAA,CACnD,CAAC;AAEX,CAAC;AAED,eAAeX,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}