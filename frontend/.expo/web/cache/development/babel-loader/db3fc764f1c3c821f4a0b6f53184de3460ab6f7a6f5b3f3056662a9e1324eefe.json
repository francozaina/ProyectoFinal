{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport axios from 'axios';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction Login() {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    email = _useState2[0],\n    setEmail = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    password = _useState4[0],\n    setPassword = _useState4[1];\n  var handleSubmit = function () {\n    var _ref = _asyncToGenerator(function* () {\n      try {\n        var response = yield axios.post('http://localhost:19006/login', {\n          dni: dni,\n          password: password\n        });\n        if (response.status !== 200) {\n          throw new Error('Credenciales incorrectas');\n        }\n        var userData = response.data;\n        console.log('Usuario:', userData);\n      } catch (error) {\n        console.error('Error al iniciar sesión:', error.message);\n      }\n    });\n    return function handleSubmit() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Login\"\n    }), _jsxs(View, {\n      style: styles.form,\n      children: [_jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          children: \"Usuario:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          type: \"email\",\n          value: email,\n          onChangeText: function onChangeText(text) {\n            return setEmail(text);\n          },\n          required: true\n        })]\n      }), _jsxs(View, {\n        style: styles.inputContainer,\n        children: [_jsx(Text, {\n          children: \"Contrase\\xF1a:\"\n        }), _jsx(TextInput, {\n          style: styles.input,\n          type: \"password\",\n          value: password,\n          onChangeText: function onChangeText(text) {\n            return setPassword(text);\n          },\n          secureTextEntry: true,\n          required: true\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.button,\n        onPress: handleSubmit,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \"Login\"\n        })\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    marginBottom: 20\n  },\n  form: {\n    width: '100%'\n  },\n  inputContainer: {\n    marginBottom: 20\n  },\n  input: {\n    width: '100%',\n    height: 40,\n    borderColor: 'gray',\n    borderWidth: 1,\n    paddingHorizontal: 10,\n    marginTop: 5\n  },\n  button: {\n    backgroundColor: '#007BFF',\n    padding: 10,\n    borderRadius: 8,\n    alignItems: 'center',\n    marginTop: 20\n  },\n  buttonText: {\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default Login;","map":{"version":3,"names":["React","useState","View","Text","TextInput","TouchableOpacity","StyleSheet","axios","jsx","_jsx","jsxs","_jsxs","Login","_useState","_useState2","_slicedToArray","email","setEmail","_useState3","_useState4","password","setPassword","handleSubmit","_ref","_asyncToGenerator","response","post","dni","status","Error","userData","data","console","log","error","message","apply","arguments","style","styles","container","children","title","form","inputContainer","input","type","value","onChangeText","text","required","secureTextEntry","button","onPress","buttonText","create","flex","alignItems","justifyContent","paddingHorizontal","fontSize","fontWeight","marginBottom","width","height","borderColor","borderWidth","marginTop","backgroundColor","padding","borderRadius","color"],"sources":["C:/Users/devandroid/Desktop/avance/demoproyecto-main/frontend/screens/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Text, TextInput, TouchableOpacity, StyleSheet } from 'react-native';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async () => {\r\n    try {\r\n      const response = await axios.post('http://localhost:19006/login', {\r\n        dni,\r\n        password,\r\n      });\r\n\r\n      if (response.status !== 200) {\r\n        throw new Error('Credenciales incorrectas');\r\n      }\r\n\r\n      const userData = response.data;\r\n\r\n      // userData debería tener la información del usuario que devuelve tu endpoint.\r\n      console.log('Usuario:', userData);\r\n\r\n      // Puedes almacenar la información del usuario en el estado global o en localStorage para usarla en futuras solicitudes.\r\n\r\n    } catch (error) {\r\n      console.error('Error al iniciar sesión:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>Login</Text>\r\n      <View style={styles.form}>\r\n        <View style={styles.inputContainer}>\r\n          <Text>Usuario:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            type=\"email\"\r\n            value={email}\r\n            onChangeText={(text) => setEmail(text)}\r\n            required\r\n          />\r\n        </View>\r\n        <View style={styles.inputContainer}>\r\n          <Text>Contraseña:</Text>\r\n          <TextInput\r\n            style={styles.input}\r\n            type=\"password\"\r\n            value={password}\r\n            onChangeText={(text) => setPassword(text)}\r\n            secureTextEntry\r\n            required\r\n          />\r\n        </View>\r\n        <TouchableOpacity style={styles.button} onPress={handleSubmit}>\r\n          <Text style={styles.buttonText}>Login</Text>\r\n        </TouchableOpacity>\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    paddingHorizontal: 20,\r\n  },\r\n  title: {\r\n    fontSize: 24,\r\n    fontWeight: 'bold',\r\n    marginBottom: 20,\r\n  },\r\n  form: {\r\n    width: '100%',\r\n  },\r\n  inputContainer: {\r\n    marginBottom: 20,\r\n  },\r\n  input: {\r\n    width: '100%',\r\n    height: 40,\r\n    borderColor: 'gray',\r\n    borderWidth: 1,\r\n    paddingHorizontal: 10,\r\n    marginTop: 5,\r\n  },\r\n  button: {\r\n    backgroundColor: '#007BFF',\r\n    padding: 10,\r\n    borderRadius: 8,\r\n    alignItems: 'center',\r\n    marginTop: 20,\r\n  },\r\n  buttonText: {\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default Login;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}